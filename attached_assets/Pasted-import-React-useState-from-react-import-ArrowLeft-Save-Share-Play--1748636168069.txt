import React, { useState } from 'react';
import { 
  ArrowLeft, 
  Save, 
  Share, 
  Play, 
  Download, 
  MoreVertical,
  Undo,
  Redo,
  Layout,
  Palette,
  ChevronDown,
  Bold,
  Italic,
  Underline,
  Strikethrough,
  AlignLeft,
  AlignCenter,
  AlignRight,
  List,
  ListOrdered,
  Plus,
  Search,
  ChevronLeft,
  ChevronRight,
  ZoomOut,
  ZoomIn,
  Maximize
} from 'lucide-react';

export default function SlideEditor() {
  const [searchQuery, setSearchQuery] = useState('');
  const [zoomLevel, setZoomLevel] = useState('1.0');
  const [currentSlide, setCurrentSlide] = useState(0);
  const [totalSlides, setTotalSlides] = useState(0);

  return (
    <div className="flex flex-col h-screen bg-gray-900 text-gray-200 font-sans">
      {/* Header */}
      <header className="flex items-center justify-between px-3 py-1.5 border-b border-gray-700 bg-gray-900 text-sm flex-shrink-0">
        <div className="flex items-center gap-3">
          <button 
            className="flex items-center justify-center w-8 h-8 rounded-md bg-transparent text-gray-200 hover:bg-gray-800 transition-colors"
            title="Back"
            aria-label="Back to presentation list"
          >
            <ArrowLeft className="w-4 h-4" />
          </button>
          <div>
            <h1 className="text-sm font-medium cursor-pointer">Untitled Presentation</h1>
            <span className="text-xs text-gray-400">Loading...</span>
          </div>
        </div>
        <div className="flex items-center gap-2">
          <button className="flex items-center gap-1.5 px-3 py-1 rounded-md bg-transparent text-gray-200 hover:bg-gray-800 transition-colors">
            <Save className="w-3.5 h-3.5" />
            Save
          </button>
          <button className="flex items-center gap-1.5 px-3 py-1 rounded-md bg-transparent text-gray-200 hover:bg-gray-800 transition-colors">
            <Share className="w-3.5 h-3.5" />
            Share
          </button>
          <button className="flex items-center gap-1.5 px-3 py-1 rounded-md bg-blue-600 text-white hover:bg-blue-700 transition-colors">
            <Play className="w-3.5 h-3.5 fill-current" />
            Present
          </button>
          <div className="w-px h-5 bg-gray-700 mx-1"></div>
          <button 
            className="flex items-center justify-center w-8 h-8 rounded-md bg-transparent text-gray-200 hover:bg-gray-800 transition-colors"
            title="Download"
          >
            <Download className="w-3.5 h-3.5" />
          </button>
          <button 
            className="flex items-center justify-center w-8 h-8 rounded-md bg-transparent text-gray-200 hover:bg-gray-800 transition-colors"
            title="More options"
          >
            <MoreVertical className="w-3.5 h-3.5" />
          </button>
        </div>
      </header>

      {/* Toolbar */}
      <div className="flex items-center justify-center px-3 py-1 border-b border-gray-700 bg-gray-900 flex-shrink-0 gap-1">
        {/* Undo/Redo */}
        <div className="flex items-center gap-0.5">
          <button className="flex items-center justify-center w-8 h-8 rounded bg-transparent text-gray-200 hover:bg-gray-800 transition-colors" title="Undo">
            <Undo className="w-4 h-4" />
          </button>
          <button className="flex items-center justify-center w-8 h-8 rounded bg-transparent text-gray-200 hover:bg-gray-800 transition-colors" title="Redo">
            <Redo className="w-4 h-4" />
          </button>
        </div>
        <div className="w-px h-4 bg-gray-700 mx-2"></div>

        {/* Layout and Insert */}
        <div className="flex items-center gap-0.5">
          <button className="flex items-center justify-center w-8 h-8 rounded bg-transparent text-gray-200 hover:bg-gray-800 transition-colors" title="Layout Options">
            <Layout className="w-4 h-4" />
          </button>
          <button className="flex items-center justify-center w-8 h-8 rounded bg-transparent text-gray-200 hover:bg-gray-800 transition-colors" title="Theme">
            <Palette className="w-4 h-4" />
          </button>
        </div>
        <div className="w-px h-4 bg-gray-700 mx-2"></div>

        {/* Font */}
        <div className="flex items-center gap-0.5">
          <button className="flex items-center min-w-15 px-2 h-8 rounded bg-transparent text-gray-200 hover:bg-gray-800 transition-colors text-sm" title="Font">
            Arial
            <ChevronDown className="w-3 h-3 ml-1" />
          </button>
          <button className="flex items-center min-w-10 px-2 h-8 rounded bg-transparent text-gray-200 hover:bg-gray-800 transition-colors text-sm" title="Font Size">
            12
            <ChevronDown className="w-3 h-3 ml-1" />
          </button>
        </div>
        <div className="w-px h-4 bg-gray-700 mx-2"></div>

        {/* Text Formatting */}
        <div className="flex items-center gap-0.5">
          <button className="flex items-center justify-center w-8 h-8 rounded bg-transparent text-gray-200 hover:bg-gray-800 transition-colors" title="Bold">
            <Bold className="w-4 h-4" />
          </button>
          <button className="flex items-center justify-center w-8 h-8 rounded bg-transparent text-gray-200 hover:bg-gray-800 transition-colors" title="Italic">
            <Italic className="w-4 h-4" />
          </button>
          <button className="flex items-center justify-center w-8 h-8 rounded bg-transparent text-gray-200 hover:bg-gray-800 transition-colors" title="Underline">
            <Underline className="w-4 h-4" />
          </button>
          <button className="flex items-center justify-center w-8 h-8 rounded bg-transparent text-gray-200 hover:bg-gray-800 transition-colors" title="Strikethrough">
            <Strikethrough className="w-4 h-4" />
          </button>
        </div>
        <div className="w-px h-4 bg-gray-700 mx-2"></div>

        {/* Alignment */}
        <div className="flex items-center gap-0.5">
          <button className="flex items-center justify-center w-8 h-8 rounded bg-transparent text-gray-200 hover:bg-gray-800 transition-colors" title="Align Left">
            <AlignLeft className="w-4 h-4" />
          </button>
          <button className="flex items-center justify-center w-8 h-8 rounded bg-transparent text-gray-200 hover:bg-gray-800 transition-colors" title="Align Center">
            <AlignCenter className="w-4 h-4" />
          </button>
          <button className="flex items-center justify-center w-8 h-8 rounded bg-transparent text-gray-200 hover:bg-gray-800 transition-colors" title="Align Right">
            <AlignRight className="w-4 h-4" />
          </button>
        </div>
        <div className="w-px h-4 bg-gray-700 mx-2"></div>

        {/* Lists */}
        <div className="flex items-center gap-0.5">
          <button className="flex items-center justify-center w-8 h-8 rounded bg-transparent text-gray-200 hover:bg-gray-800 transition-colors" title="Bullet List">
            <List className="w-4 h-4" />
          </button>
          <button className="flex items-center justify-center w-8 h-8 rounded bg-transparent text-gray-200 hover:bg-gray-800 transition-colors" title="Numbered List">
            <ListOrdered className="w-4 h-4" />
          </button>
        </div>
      </div>

      {/* Main Content */}
      <div className="flex flex-1 overflow-hidden">
        {/* Sidebar */}
        <aside className="w-60 bg-gray-900 border-r border-gray-700 flex flex-col pt-3 flex-shrink-0">
          <div className="px-3 pb-3">
            <h2 className="sr-only">Slides panel</h2>
            <div className="relative mb-3">
              <Search className="absolute left-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none" />
              <input 
                type="search" 
                className="w-full pl-8 pr-2 py-1.5 bg-gray-800 text-gray-200 border border-transparent rounded-md text-sm placeholder-gray-400 focus:outline-none focus:border-blue-600"
                placeholder="Search slides..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
              />
            </div>
            <button className="w-full flex items-center justify-center gap-2 py-2 bg-blue-600 text-white rounded-md text-sm hover:bg-blue-700 transition-colors">
              <Plus className="w-3.5 h-3.5" />
              New Slide
            </button>
          </div>
          <div className="flex-1 overflow-y-auto p-2">
            <p className="text-center text-gray-400 text-sm py-8 px-4">Loading slides...</p>
          </div>
        </aside>

        {/* Canvas Area */}
        <main className="flex-1 bg-gray-800 flex flex-col items-center justify-center p-8 relative">
          <div className="w-full max-w-4xl bg-white rounded-lg shadow-2xl aspect-video flex items-center justify-center text-gray-500">
            <p>Select a slide to edit</p>
          </div>

          {/* Bottom Bar */}
          <div className="absolute bottom-0 left-0 right-0 bg-gray-900 border-t border-gray-700 px-4 py-1 flex items-center justify-between text-sm">
            <div className="flex items-center gap-2">
              <button 
                className="flex items-center justify-center w-8 h-8 rounded bg-transparent text-gray-200 hover:bg-gray-800 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
                title="Previous slide"
                disabled={currentSlide === 0}
              >
                <ChevronLeft className="w-3.5 h-3.5" />
              </button>
              <span className="text-xs text-gray-400 w-16 text-center">
                Slide {totalSlides > 0 ? `${currentSlide + 1} / ${totalSlides}` : '- / -'}
              </span>
              <button 
                className="flex items-center justify-center w-8 h-8 rounded bg-transparent text-gray-200 hover:bg-gray-800 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
                title="Next slide"
                disabled={currentSlide >= totalSlides - 1}
              >
                <ChevronRight className="w-3.5 h-3.5" />
              </button>
            </div>
            <div className="flex items-center gap-2">
              <button 
                className="flex items-center justify-center w-8 h-8 rounded bg-transparent text-gray-200 hover:bg-gray-800 transition-colors"
                title="Zoom out"
              >
                <ZoomOut className="w-3.5 h-3.5" />
              </button>
              <select 
                className="bg-gray-800 border border-gray-700 text-gray-200 px-1 py-0.5 rounded text-xs w-20 text-center"
                value={zoomLevel}
                onChange={(e) => setZoomLevel(e.target.value)}
              >
                <option value="0.5">50%</option>
                <option value="0.75">75%</option>
                <option value="1.0">100%</option>
                <option value="1.5">150%</option>
                <option value="2.0">200%</option>
                <option value="fit">Fit</option>
              </select>
              <button 
                className="flex items-center justify-center w-8 h-8 rounded bg-transparent text-gray-200 hover:bg-gray-800 transition-colors"
                title="Zoom in"
              >
                <ZoomIn className="w-3.5 h-3.5" />
              </button>
              <div className="w-px h-4 bg-gray-700 mx-1"></div>
              <button 
                className="flex items-center justify-center w-8 h-8 rounded bg-transparent text-gray-200 hover:bg-gray-800 transition-colors"
                title="Fullscreen"
              >
                <Maximize className="w-3.5 h-3.5" />
              </button>
            </div>
          </div>
        </main>
      </div>
    </div>
  );
}